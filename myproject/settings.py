"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# =========================
# Base Directory
# =========================
BASE_DIR = Path(__file__).resolve().parent.parent

# =========================
# Site Settings
# =========================
SITE_NAME = "MaveRick Coding Platform"
SITE_URL = "http://127.0.0.1:8000"

# =========================
# Security Settings
# =========================
SECRET_KEY = 'django-insecure-o8!5#l78)_x#e5(0bs_0l&(+3@4^f-5zv$pj!9u4e&djhz@-)r'
DEBUG = True
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'maverick.selfmade.one',
    'www.maverick.selfmade.one',
]

CSRF_TRUSTED_ORIGINS = [
    "https://maverick.selfmade.one",
    "http://maverick.selfmade.one",
]

X_FRAME_OPTIONS = 'ALLOW-FROM https://docs.google.com'

# =========================
# Application Definition
# =========================
INSTALLED_APPS = [
     "unfold", 
   
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     'myapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

WSGI_APPLICATION = 'myproject.wsgi.application'

# =========================
# Templates
# =========================
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# =========================
# Database Configuration
# =========================
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# =========================
# Password Validators
# =========================
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# =========================
# Internationalization
# =========================
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'
USE_I18N = True
USE_TZ = True

# =========================
# Authentication
# =========================
AUTH_USER_MODEL = 'myapp.CustomUser'

LOGIN_REDIRECT_URL = 'dashboard'

# =========================
# Static & Media Files
# =========================
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# =========================
# Default Primary Key Field
# =========================
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =========================
# Email Backend Settings
# =========================
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtpout.secureserver.net'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False  # Explicitly disable TLS
EMAIL_HOST_USER = 'support@bullsielite.com'
EMAIL_HOST_PASSWORD = 'Tami@2004'
DEFAULT_FROM_EMAIL = 'support@bullsielite.com'

# =========================
# Upload Limits
# =========================
FILE_UPLOAD_MAX_MEMORY_SIZE = 50 * 1024 * 1024  # 50 MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 50 * 1024 * 1024  # 50 MB
DATA_UPLOAD_MAX_NUMBER_FIELDS = 1000

# =========================
# Hackathon File Upload Settings
# =========================
HACKATHON_MAX_FILE_SIZE = 50 * 1024 * 1024  # 50 MB per file
HACKATHON_MAX_TOTAL_SIZE = 200 * 1024 * 1024  # 200 MB total per submission
HACKATHON_ALLOWED_FILE_TYPES = [
    'pdf', 'doc', 'docx', 'txt', 'zip', 'tar.gz', 'rar',
    'jpg', 'jpeg', 'png', 'gif', 'mp4', 'avi', 'mov',
    'ppt', 'pptx', 'xlsx', 'xls', 'csv', 'py', 'js', 'html', 'css',
]

# =========================
# API Integration Settings
# =========================
GITHUB_API_TOKEN = os.environ.get('GITHUB_API_TOKEN', '')
GITHUB_API_BASE_URL = 'https://api.github.com'
GITHUB_TIMEOUT = 30  # seconds

SLACK_BOT_TOKEN = os.environ.get('SLACK_BOT_TOKEN', '')
SLACK_SIGNING_SECRET = os.environ.get('SLACK_SIGNING_SECRET', '')
SLACK_DEFAULT_CHANNEL = '#hackathons'

DISCORD_BOT_TOKEN = os.environ.get('DISCORD_BOT_TOKEN', '')
DISCORD_GUILD_ID = os.environ.get('DISCORD_GUILD_ID', '')

API_REQUEST_TIMEOUT = 30  # seconds
API_RETRY_ATTEMPTS = 3

OPENROUTER_API_KEY = "#ENTER YOUR ACTUAL API"
OPENROUTER_SITE_URL = "http://127.0.0.1:8000/"
OPENROUTER_SITE_NAME = "Coding Practice Platform"

def get_openrouter_api_key():
    return os.getenv('OPENROUTER_API_KEY', OPENROUTER_API_KEY)

def validate_openrouter_setup():
    key = get_openrouter_api_key()
    if not key:
        raise ValueError("OpenRouter API key is not configured")
    if not key.startswith('sk-or-v1-'):
        raise ValueError("Invalid OpenRouter API key format")
    return key

VALIDATE_OPENROUTER_SETUP = validate_openrouter_setup

# =========================
# AI Evaluation Settings
# =========================
AI_EVALUATION_SETTINGS = {
    "MODEL": "mistralai/mistral-7b-instruct:free",  # fixed slug
    "MAX_TOKENS": 800,
    "TEMPERATURE": 0.3,
    "TIMEOUT": 90,
    "MAX_FILE_SIZE": 10_000,
    "SUPPORTED_EXTENSIONS": [
        ".py", ".js", ".html", ".css", ".txt",
        ".md", ".json", ".yml", ".yaml",
    ],
    "FALLBACK_SCORE": 50,
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'django.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# =========================
# Custom Admin Theme Settings (UNFOLD styling)
# =========================
UNFOLD = {
    "SITE_TITLE": "⚡ Maverick Admin",
    "SITE_HEADER": "Maverick Coding Platform",
    "SITE_SYMBOL": "⚡",

    # "SITE_LOGO": "/staticfiles/images/logo1.png", 
    "THEME": "dark",  # "light" or "dark"
    "PRIMARY_COLOR": "#4F46E5",  # Indigo
    "SECONDARY_COLOR": "#F97316",  # Orange
    "SHOW_CHANGELIST_TOP_BAR": True,
    "COLLAPSIBLE_SIDEBAR": True,
}
